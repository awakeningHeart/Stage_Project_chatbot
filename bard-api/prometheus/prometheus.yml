global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s
  external_labels:
    project: 'yonework'
    environment: 'production'

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093
      scheme: http
      path_prefix: /
      timeout: 10s

rule_files:
  - "alert_rules.yml"

scrape_configs:
  - job_name: 'yonework'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['host.docker.internal:9090']
    scrape_interval: 5s
    scrape_timeout: 4s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'yonework-api'
      - source_labels: [__address__]
        target_label: environment
        replacement: 'production'
      - source_labels: [__address__]
        target_label: version
        replacement: '1.0.0'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'yonework_.*'
        action: keep

  - job_name: 'node'
    static_configs:
      - targets: ['host.docker.internal:9090']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'node_.*'
        action: keep

  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'redis_.*'
        action: keep

  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'prometheus_.*'
        action: keep

# ⚠️ La section "storage" n'existe pas dans la configuration Prometheus !
# Tu dois configurer ces paramètres via les flags au lancement du conteneur Docker.
# Exemple : --storage.tsdb.retention.time=15d

# log, security, web ne sont pas valides dans prometheus.yml, ce sont des options CLI.
# À définir avec des flags dans la commande `docker run`

 